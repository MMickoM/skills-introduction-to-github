C51 COMPILER V8.12   C8051F120_DEFS                                                        11/17/2023 08:28:32 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE C8051F120_DEFS
OBJECT MODULE PLACED IN C8051F120_defs.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe C8051F120_defs.h DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // C8051F120_defs.h
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2008, Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // Register/bit definitions for the C8051F12x family.
  10          // **Important Note**: The si_toolchain.h header file should be included
  11          // before including this header file.
  12          //
  13          // Target:         C8051F120, 'F121, 'F122, 'F123, 'F124, 'F125, 'F126, 'F127,
  14          //                 'F130, 'F131, 'F132, 'F133
  15          // Tool chain:     Generic
  16          // Command Line:   None
  17          //
  18          // Release 1.3 - 20 AUG 2012 (TP)
  19          //    -Added #define for _XPAGE to provide support for SDCC memory paging
  20          //     (pdata)
  21          // Release 1.2 - 21 July 2008 (ES)
  22          //    -Added P6 and MAC0STA to bit-addressable registers
  23          // Release 1.1 - 07 AUG 2007 (PKC)
  24          //    -Removed #include "si_toolchain.h". The C source file should include it.
  25          //    -Corrected preprocessor directive to C8051F120_DEFS_H
  26          // Release 1.0 - 08 DEC 2006 (BW)
  27          //    -Ported from 'F360 DEFS rev 1.1
  28          
  29          //-----------------------------------------------------------------------------
  30          // Header File Preprocessor Directive
  31          //-----------------------------------------------------------------------------
  32          
  33          #ifndef C8051F120_DEFS_H
  34          #define C8051F120_DEFS_H
  35          
  36          #include "si_toolchain.h"
  37          
  38          //-----------------------------------------------------------------------------
  39          // Byte Registers
  40          //-----------------------------------------------------------------------------
  41          
  42          SI_SFR(P0, 0x80);                        // Port 0 Latch
  43          SI_SFR(SP, 0x81);                        // Stack Pointer
  44          SI_SFR(DPL, 0x82);                       // Data Pointer Low
  45          SI_SFR(DPH, 0x83);                       // Data Pointer High
  46          SI_SFR(SFRPAGE, 0x84);                   // SFR Page Select
  47          SI_SFR(SFRNEXT, 0x85);                   // SFR stack next page
  48          SI_SFR(SFRLAST, 0x86);                   // SFR stack last page
  49          SI_SFR(PCON, 0x87);                      // Power Control
  50          SI_SFR(TCON, 0x88);                      // Timer/Counter Control
  51          SI_SFR(CPT0CN, 0x88);                    // Comparator1 Control
  52          SI_SFR(CPT1CN, 0x88);                    // Comparator0 Control
  53          SI_SFR(FLSTAT, 0x88);                    // Flash Status
  54          SI_SFR(TMOD, 0x89);                      // Timer/Counter Mode
  55          SI_SFR(CPT0MD, 0x89);                    // Comparator0 Mode
C51 COMPILER V8.12   C8051F120_DEFS                                                        11/17/2023 08:28:32 PAGE 2   

  56          SI_SFR(CPT1MD, 0x89);                    // Comparator1 Mode
  57          SI_SFR(PLL0CN, 0x89);                    // PLL0 Control
  58          SI_SFR(TL0, 0x8A);                       // Timer/Counter 0 Low
  59          SI_SFR(OSCICN, 0x8A);                    // Internal Oscillator Control
  60          SI_SFR(TL1, 0x8B);                       // Timer/Counter 1 Low
  61          SI_SFR(OSCICL, 0x8B);                    // Internal Oscillator Calibration
  62          SI_SFR(TH0, 0x8C);                       // Timer/Counter 0 High
  63          SI_SFR(OSCXCN, 0x8C);                    // External Oscillator Control
  64          SI_SFR(TH1, 0x8D);                       // Timer/Counter 1 High
  65          SI_SFR(PLL0DIV, 0x8D);                   // PLL0 Divider
  66          SI_SFR(CKCON, 0x8E);                     // Clock Control
  67          SI_SFR(PLL0MUL, 0x8E);                   // PLL0 Multiplier
  68          SI_SFR(PSCTL, 0x8F);                     // Program Store R/W Control
  69          SI_SFR(PLL0FLT, 0x8F);                   // PLL0 Filter
  70          SI_SFR(P1, 0x90);                        // Port 1 Latch
  71          SI_SFR(SSTA0, 0x91);                     // UART0 Status
  72          SI_SFR(MAC0BL, 0x91);                    // MAC0 B Low Byte
  73          SI_SFR(MAC0BH, 0x92);                    // MAC0 B High Byte
  74          SI_SFR(MAC0ACC0, 0x93);                  // MAC0 Accumulator Byte 0
  75          SI_SFR(MAC0ACC1, 0x94);                  // MAC0 Accumulator Byte 1
  76          SI_SFR(MAC0ACC2, 0x95);                  // MAC0 Accumulator Byte 2
  77          SI_SFR(MAC0ACC3, 0x96);                  // MAC0 Accumulator Byte 3
  78          SI_SFR(SFRPGCN, 0x96);                   // SFR Page Control
  79          SI_SFR(CLKSEL, 0x97);                    // System clock select
  80          SI_SFR(MAC0OVR, 0x97);                   // MAC0 Accumulator Overflow
  81          SI_SFR(SCON0, 0x98);                     // UART0 Control
  82          SI_SFR(SCON, 0x98);                      // UART0 Control
  83          SI_SFR(SCON1, 0x98);                     // UART1 Control
  84          SI_SFR(SBUF0, 0x99);                     // UART0 Data Buffer
  85          SI_SFR(SBUF, 0x99);                      // UART0 Data Buffer
  86          SI_SFR(SBUF1, 0x99);                     // UART1 Data Buffer
  87          SI_SFR(SPI0CFG, 0x9A);                   // SPI0 Configuration
  88          SI_SFR(CCH0MA, 0x9A);                    // Cache Miss Accumulator
  89          SI_SFR(SPI0DAT, 0x9B);                   // SPI0 Data
  90          SI_SFR(P4MDOUT, 0x9C);                   // Port 4 Output Mode
  91          SI_SFR(SPI0CKR, 0x9D);                   // SPI0 Clock rate control
  92          SI_SFR(P5MDOUT, 0x9D);                   // Port 5 Output Mode
  93          SI_SFR(P6MDOUT, 0x9E);                   // Port 6 Output Mode
  94          SI_SFR(P7MDOUT, 0x9F);                   // Port 7 Output Mode
  95          SI_SFR(P2, 0xA0);                        // Port 2 Latch
  96          SI_SFR(EMI0TC, 0xA1);                    // EMIF Timing control
  97          SI_SFR(CCH0CN, 0xA1);                    // Cache control
  98          SI_SFR(EMI0CN, 0xA2);                    // EMIF control
  99          SI_SFR(CCH0TN, 0xA2);                    // Cache tuning
 100          SI_SFR(EMI0CF, 0xA3);                    // EMIF configuration
 101          SI_SFR(CCH0LC, 0xA3);                    // Cache lock
 102          SI_SFR(P0MDOUT, 0xA4);                   // Port 0 Output Mode
 103          SI_SFR(P1MDOUT, 0xA5);                   // Port 1 Output Mode
 104          SI_SFR(P2MDOUT, 0xA6);                   // Port 2 Output Mode
 105          SI_SFR(P3MDOUT, 0xA7);                   // Port 3 Output Mode
 106          SI_SFR(IE, 0xA8);                        // Interrupt Enable
 107          SI_SFR(SADDR0, 0xA9);                    // UART0 Slave address
 108          SI_SFR(P1MDIN, 0xAD);                    // Port 1 Analog Input Mode
 109          SI_SFR(P3, 0xB0);                        // Port 3 Latch
 110          SI_SFR(PSBANK, 0xB1);                    // Flash bank select
 111          SI_SFR(FLSCL, 0xB7);                     // Flash scale
 112          SI_SFR(FLACL, 0xB7);                     // Flash access limit
 113          SI_SFR(IP, 0xB8);                        // Interrupt Priority
 114          SI_SFR(SADEN0, 0xB9);                    // UART0 Slave address mask
 115          SI_SFR(AMX0CF, 0xBA);                    // AMUX0 Channel configuration
 116          SI_SFR(AMX2CF, 0xBA);                    // AMUX2 Channel configuration
 117          SI_SFR(AMX0SL, 0xBB);                    // AMUX0 Channel select
C51 COMPILER V8.12   C8051F120_DEFS                                                        11/17/2023 08:28:32 PAGE 3   

 118          SI_SFR(AMX2SL, 0xBB);                    // AMUX2 Channel select
 119          SI_SFR(ADC0CF, 0xBC);                    // ADC0 Configuration
 120          SI_SFR(ADC2CF, 0xBC);                    // ADC2 Configuration
 121          SI_SFR(ADC0L, 0xBE);                     // ADC0 Data Low
 122          SI_SFR(ADC2, 0xBE);                      // ADC2 Data
 123          SI_SFR(ADC0H, 0xBF);                     // ADC0 Data High
 124          SI_SFR(SMB0CN, 0xC0);                    // SMBus0 Control
 125          SI_SFR(MAC0STA, 0xC0);                   // MAC0 Status
 126          SI_SFR(SMB0STA, 0xC1);                   // SMBus0 Status
 127          SI_SFR(MAC0AL, 0xC1);                    // MAC0 A Low Byte
 128          SI_SFR(SMB0DAT, 0xC2);                   // SMBus0 Data
 129          SI_SFR(MAC0AH, 0xC2);                    // MAC0 A High Byte
 130          SI_SFR(SMB0ADR, 0xC3);                   // SMBus0 Slave address
 131          SI_SFR(MAC0CF, 0xC3);                    // MAC0 Configuration
 132          SI_SFR(ADC0GTL, 0xC4);                   // ADC0 Greater-Than Compare Low
 133          SI_SFR(ADC2GT, 0xC4);                    // ADC2 Greater-Than Compare
 134          SI_SFR(ADC0GTH, 0xC5);                   // ADC0 Greater-Than Compare High
 135          SI_SFR(ADC0LTL, 0xC6);                   // ADC0 Less-Than Compare Word Low
 136          SI_SFR(ADC2LT, 0xC6);                    // ADC2 Less-Than Compare Word
 137          SI_SFR(ADC0LTH, 0xC7);                   // ADC0 Less-Than Compare Word High
 138          SI_SFR(TMR2CN, 0xC8);                    // Timer/Counter 2 Control
 139          SI_SFR(TMR3CN, 0xC8);                    // Timer/Counter 3 Control
 140          SI_SFR(TMR4CN, 0xC8);                    // Timer/Counter 4 Control
 141          SI_SFR(P4, 0xC8);                        // Port 4 Latch
 142          SI_SFR(TMR2CF, 0xC9);                    // Timer/Counter 2 Configuration
 143          SI_SFR(TMR3CF, 0xC9);                    // Timer/Counter 3 Configuration
 144          SI_SFR(TMR4CF, 0xC9);                    // Timer/Counter 4 Configuration
 145          SI_SFR(RCAP2L, 0xCA);                    // Timer/Counter 2 Reload Low
 146          SI_SFR(RCAP3L, 0xCA);                    // Timer/Counter 3 Reload Low
 147          SI_SFR(RCAP4L, 0xCA);                    // Timer/Counter 4 Reload Low
 148          SI_SFR(RCAP2H, 0xCB);                    // Timer/Counter 2 Reload High
 149          SI_SFR(RCAP3H, 0xCB);                    // Timer/Counter 3 Reload High
 150          SI_SFR(RCAP4H, 0xCB);                    // Timer/Counter 4 Reload High
 151          SI_SFR(TMR2L, 0xCC);                     // Timer/Counter 2 Low
 152          SI_SFR(TMR3L, 0xCC);                     // Timer/Counter 3 Low
 153          SI_SFR(TMR4L, 0xCC);                     // Timer/Counter 4 Low
 154          SI_SFR(TMR2H, 0xCD);                     // Timer/Counter 2 High
 155          SI_SFR(TMR3H, 0xCD);                     // Timer/Counter 3 High
 156          SI_SFR(TMR4H, 0xCD);                     // Timer/Counter 4 High
 157          SI_SFR(MAC0RNDL, 0xCE);                  // MAC0 Rounding Register Low Byte
 158          SI_SFR(SMB0CR, 0xCF);                    // SMBus0 Clock Rate
 159          SI_SFR(MAC0RNDH, 0xCF);                  // MAC0 Rounding Register High Byte
 160          SI_SFR(PSW, 0xD0);                       // Program Status Word
 161          SI_SFR(REF0CN, 0xD1);                    // Voltage Reference Control
 162          SI_SFR(DAC0L, 0xD2);                     // DAC0 Data Low
 163          SI_SFR(DAC1L, 0xD2);                     // DAC1 Data Low
 164          SI_SFR(DAC0H, 0xD3);                     // DAC0 Data High
 165          SI_SFR(DAC1H, 0xD3);                     // DAC1 Data High
 166          SI_SFR(DAC0CN, 0xD4);                    // DAC0 Control
 167          SI_SFR(DAC1CN, 0xD4);                    // DAC2 Control
 168          SI_SFR(PCA0CN, 0xD8);                    // PCA0 Control
 169          SI_SFR(P5, 0xD8);                        // Port 5 Latch
 170          SI_SFR(PCA0MD, 0xD9);                    // PCA0 Mode
 171          SI_SFR(PCA0CPM0, 0xDA);                  // PCA0 Module 0 Mode Register
 172          SI_SFR(PCA0CPM1, 0xDB);                  // PCA0 Module 1 Mode Register
 173          SI_SFR(PCA0CPM2, 0xDC);                  // PCA0 Module 2 Mode Register
 174          SI_SFR(PCA0CPM3, 0xDD);                  // PCA0 Module 3 Mode Register
 175          SI_SFR(PCA0CPM4, 0xDE);                  // PCA0 Module 4 Mode Register
 176          SI_SFR(PCA0CPM5, 0xDF);                  // PCA0 Module 5 Mode Register
 177          SI_SFR(ACC, 0xE0);                       // Accumulator
 178          SI_SFR(PCA0CPL5, 0xE1);                  // PCA0 Module 5 Capture/Compare Low
 179          SI_SFR(XBR0, 0xE1);                      // Port I/O Crossbar Control 0
C51 COMPILER V8.12   C8051F120_DEFS                                                        11/17/2023 08:28:32 PAGE 4   

 180          SI_SFR(PCA0CPH5, 0xE2);                  // PCA0 Module 5 Capture/Compare High
 181          SI_SFR(XBR1, 0xE2);                      // Port I/O Crossbar Control 1
 182          SI_SFR(XBR2, 0xE3);                      // Port I/O Crossbar Control 2
 183          SI_SFR(EIE1, 0xE6);                      // Extended Interrupt Enable 1
 184          SI_SFR(EIE2, 0xE7);                      // Extended Interrupt Enable 2
 185          SI_SFR(ADC0CN, 0xE8);                    // ADC0 Control
 186          SI_SFR(ADC2CN, 0xE8);                    // ADC2 Control
 187          SI_SFR(P6, 0xE8);                        // Port 6 Latch
 188          SI_SFR(PCA0CPL2, 0xE9);                  // PCA0 Capture 2 Low
 189          SI_SFR(PCA0CPH2, 0xEA);                  // PCA0 Capture 2 High
 190          SI_SFR(PCA0CPL3, 0xEB);                  // PCA0 Capture 3 Low
 191          SI_SFR(PCA0CPH3, 0xEC);                  // PCA0 Capture 3 High
 192          SI_SFR(PCA0CPL4, 0xED);                  // PCA0 Capture 4 Low
 193          SI_SFR(PCA0CPH4, 0xEE);                  // PCA0 Capture 4 High
 194          SI_SFR(RSTSRC, 0xEF);                    // Reset Source Configuration/Status
 195          SI_SFR(B, 0xF0);                         // B Register
 196          SI_SFR(EIP1, 0xF6);                      // External Interrupt Priority 1
 197          SI_SFR(EIP2, 0xF7);                      // External Interrupt Priority 2
 198          SI_SFR(SPI0CN, 0xF8);                    // SPI0 Control
 199          SI_SFR(P7, 0xF8);                        // Port 7 Latch
 200          SI_SFR(PCA0L, 0xF9);                     // PCA0 Counter Low
 201          SI_SFR(PCA0H, 0xFA);                     // PCA0 Counter High
 202          SI_SFR(PCA0CPL0, 0xFB);                  // PCA0 Capture 0 Low
 203          SI_SFR(PCA0CPH0, 0xFC);                  // PCA0 Capture 0 High
 204          SI_SFR(PCA0CPL1, 0xFD);                  // PCA0 Capture 1 Low
 205          SI_SFR(PCA0CPH1, 0xFE);                  // PCA0 Capture 1 High
 206          SI_SFR(WDTCN, 0xFF);                     // Watchdog Timer Control
 207          
 208          //-----------------------------------------------------------------------------
 209          // 16-bit Register Definitions (might not be supported by all compilers)
 210          //-----------------------------------------------------------------------------
 211          
 212          SI_SFR16(DP, 0x82);                      // Data Pointer
 213          SI_SFR16(MAC0B, 0x91);                   // MAC0B data register
 214          SI_SFR16(MAC0ACCL, 0x93);                // MAC0ACC low registers
 215          SI_SFR16(MAC0ACCH, 0x95);                // MAC0ACC high registers
 216          SI_SFR16(ADC0, 0xbe);                    // ADC0 data
 217          SI_SFR16(MAC0A, 0xc1);                   // MAC0A data register
 218          SI_SFR16(ADC0GT, 0xc4);                  // ADC0 greater than window
 219          SI_SFR16(ADC0LT, 0xc6);                  // ADC0 less than window
 220          SI_SFR16(RCAP2, 0xca);                   // Timer2 capture/reload
 221          SI_SFR16(RCAP3, 0xca);                   // Timer3 capture/reload
 222          SI_SFR16(RCAP4, 0xca);                   // Timer4 capture/reload
 223          SI_SFR16(TMR2, 0xcc);                    // Timer2
 224          SI_SFR16(TMR3, 0xcc);                    // Timer3
 225          SI_SFR16(TMR4, 0xcc);                    // Timer4
 226          SI_SFR16(MAC0RND, 0xce);                 // MAC0RND registers
 227          SI_SFR16(DAC0, 0xd2);                    // DAC0 data
 228          SI_SFR16(DAC1, 0xd2);                    // DAC1 data
 229          SI_SFR16(PCA0CP5, 0xe1);                 // PCA0 Module 5 capture
 230          SI_SFR16(PCA0CP2, 0xe9);                 // PCA0 Module 2 capture
 231          SI_SFR16(PCA0CP3, 0xeb);                 // PCA0 Module 3 capture
 232          SI_SFR16(PCA0CP4, 0xed);                 // PCA0 Module 4 capture
 233          SI_SFR16(PCA0, 0xf9);                    // PCA0 counter
 234          SI_SFR16(PCA0CP0, 0xfb);                 // PCA0 Module 0 capture
 235          SI_SFR16(PCA0CP1, 0xfd);                 // PCA0 Module 1 capture
 236          
 237          //-----------------------------------------------------------------------------
 238          // Address Definitions for Bit-addressable Registers
 239          //-----------------------------------------------------------------------------
 240          
 241          #define SFR_P0       0x80
C51 COMPILER V8.12   C8051F120_DEFS                                                        11/17/2023 08:28:32 PAGE 5   

 242          #define SFR_TCON     0x88
 243          #define SFR_CPT0CN   0x88
 244          #define SFR_CPT1CN   0x88
 245          #define SFR_FLSTAT   0x88
 246          #define SFR_P1       0x90
 247          #define SFR_SCON0    0x98
 248          #define SFR_SCON     0x98
 249          #define SFR_SCON1    0x98
 250          #define SFR_P2       0xA0
 251          #define SFR_IE       0xA8
 252          #define SFR_P3       0xB0
 253          #define SFR_IP       0xB8
 254          #define SFR_SMB0CN   0xC0
 255          #define SFR_MAC0STA  0xC0
 256          #define SFR_TMR2CN   0xC8
 257          #define SFR_TMR3CN   0xC8
 258          #define SFR_TMR4CN   0xC8
 259          #define SFR_P4       0xC8
 260          #define SFR_PSW      0xD0
 261          #define SFR_PCA0CN   0xD8
 262          #define SFR_P5       0xD8
 263          #define SFR_ACC      0xE0
 264          #define SFR_ADC0CN   0xE8
 265          #define SFR_ADC2CN   0xE8
 266          #define SFR_P6        0xE8
 267          #define SFR_B        0xF0
 268          #define SFR_SPI0CN   0xF8
 269          #define SFR_P7       0xF8
 270          
 271          //-----------------------------------------------------------------------------
 272          // Bit Definitions
 273          //-----------------------------------------------------------------------------
 274          
 275          // TCON 0x88
 276          SI_SBIT(TF1, SFR_TCON, 7);               // Timer 1 Overflow Flag
 277          SI_SBIT(TR1, SFR_TCON, 6);               // Timer 1 On/Off Control
 278          SI_SBIT(TF0, SFR_TCON, 5);               // Timer 0 Overflow Flag
 279          SI_SBIT(TR0, SFR_TCON, 4);               // Timer 0 On/Off Control
 280          SI_SBIT(IE1, SFR_TCON, 3);               // Ext. Interrupt 1 Edge Flag
 281          SI_SBIT(IT1, SFR_TCON, 2);               // Ext. Interrupt 1 Type
 282          SI_SBIT(IE0, SFR_TCON, 1);               // Ext. Interrupt 0 Edge Flag
 283          SI_SBIT(IT0, SFR_TCON, 0);               // Ext. Interrupt 0 Type
 284          
 285          // CPT0CN  0x88
 286          SI_SBIT(CP0EN, SFR_CPT0CN, 7);           // Comparator 0 Enable
 287          SI_SBIT(CP0OUT, SFR_CPT0CN, 6);          // Comparator 0 Output
 288          SI_SBIT(CP0RIF, SFR_CPT0CN, 5);          // Comparator 0 Rising Edge Interrupt
 289          SI_SBIT(CP0FIF, SFR_CPT0CN, 4);          // Comparator 0 Falling Edge Interrupt
 290          SI_SBIT(CP0HYP1, SFR_CPT0CN, 3);         // Comparator 0 Positive Hysteresis 1
 291          SI_SBIT(CP0HYP0, SFR_CPT0CN, 2);         // Comparator 0 Positive Hysteresis 0
 292          SI_SBIT(CP0HYN1, SFR_CPT0CN, 1);         // Comparator 0 Negative Hysteresis 1
 293          SI_SBIT(CP0HYN0, SFR_CPT0CN, 0);         // Comparator 0 Negative Hysteresis 0
 294          
 295          // CPT1CN  0x88
 296          SI_SBIT(CP1EN, SFR_CPT1CN, 7);           // Comparator 1 Enable
 297          SI_SBIT(CP1OUT, SFR_CPT1CN, 6);          // Comparator 1 Output
 298          SI_SBIT(CP1RIF, SFR_CPT1CN, 5);          // Comparator 1 Rising Edge Interrupt
 299          SI_SBIT(CP1FIF, SFR_CPT1CN, 4);          // Comparator 1 Falling Edge Interrupt
 300          SI_SBIT(CP1HYP1, SFR_CPT1CN, 3);         // Comparator 1 Positive Hysteresis 1
 301          SI_SBIT(CP1HYP0, SFR_CPT1CN, 2);         // Comparator 1 Positive Hysteresis 0
 302          SI_SBIT(CP1HYN1, SFR_CPT1CN, 1);         // Comparator 1 Negative Hysteresis 1
 303          SI_SBIT(CP1HYN0, SFR_CPT1CN, 0);         // Comparator 1 Negative Hysteresis 0
C51 COMPILER V8.12   C8051F120_DEFS                                                        11/17/2023 08:28:32 PAGE 6   

 304          
 305          // FLSTAT  0x88
 306          SI_SBIT(FLBUSY, SFR_FLSTAT, 0);          // FLASH Busy
 307          
 308          // SCON0 0x98
 309          SI_SBIT(SM00, SFR_SCON0, 7);             // UART0 Mode 0
 310          SI_SBIT(SM10, SFR_SCON0, 6);             // UART0 Mode 1
 311          SI_SBIT(SM20, SFR_SCON0, 5);             // UART0 Multiprocessor enable
 312          SI_SBIT(REN0, SFR_SCON0, 4);             // UART0 RX Enable
 313          SI_SBIT(REN, SFR_SCON0, 4);              // UART0 RX Enable
 314          SI_SBIT(TB80, SFR_SCON0, 3);             // UART0 TX Bit 8
 315          SI_SBIT(TB8, SFR_SCON0, 3);              // UART0 TX Bit 8
 316          SI_SBIT(RB80, SFR_SCON0, 2);             // UART0 RX Bit 8
 317          SI_SBIT(RB8, SFR_SCON0, 2);              // UART0 RX Bit 8
 318          SI_SBIT(TI0, SFR_SCON0, 1);              // UART0 TX Interrupt Flag
 319          SI_SBIT(TI, SFR_SCON0, 1);               // UART0 TX Interrupt Flag
 320          SI_SBIT(RI0, SFR_SCON0, 0);              // UART0 RX Interrupt Flag
 321          SI_SBIT(RI, SFR_SCON0, 0);               // UART0 RX Interrupt Flag
 322          
 323          // SCON1 0x98
 324          SI_SBIT(S1MODE, SFR_SCON1, 7);           // UART1 Mode
 325                                                 // Bit6 UNUSED
 326          SI_SBIT(MCE1, SFR_SCON1, 5);             // UART1 MCE
 327          SI_SBIT(REN1, SFR_SCON1, 4);             // UART1 RX Enable
 328          SI_SBIT(TB81, SFR_SCON1, 3);             // UART1 TX Bit 8
 329          SI_SBIT(RB81, SFR_SCON1, 2);             // UART1 RX Bit 8
 330          SI_SBIT(TI1, SFR_SCON1, 1);              // UART1 TX Interrupt Flag
 331          SI_SBIT(RI1, SFR_SCON1, 0);              // UART1 RX Interrupt Flag
 332          
 333          
 334          // IE 0xA8
 335          SI_SBIT(EA, SFR_IE, 7);                  // Global Interrupt Enable
 336                                                 // Bit 6 unused
 337          SI_SBIT(ET2, SFR_IE, 5);                 // Timer 2 Interrupt Enable
 338          SI_SBIT(ES0, SFR_IE, 4);                 // UART0 Interrupt Enable
 339          SI_SBIT(ET1, SFR_IE, 3);                 // Timer 1 Interrupt Enable
 340          SI_SBIT(EX1, SFR_IE, 2);                 // External Interrupt 1 Enable
 341          SI_SBIT(ET0, SFR_IE, 1);                 // Timer 0 Interrupt Enable
 342          SI_SBIT(EX0, SFR_IE, 0);                 // External Interrupt 0 Enable
 343          
 344          // IP 0xB8
 345                                                 // Bit 7 unused
 346                                                 // Bit 6 unused
 347          SI_SBIT(PT2, SFR_IP, 5);                 // Timer 2 Priority
 348          SI_SBIT(PS0, SFR_IP, 4);                 // UART0 Priority
 349          SI_SBIT(PS, SFR_IP, 4);                  // UART0 Priority
 350          SI_SBIT(PT1, SFR_IP, 3);                 // Timer 1 Priority
 351          SI_SBIT(PX1, SFR_IP, 2);                 // External Interrupt 1 Priority
 352          SI_SBIT(PT0, SFR_IP, 1);                 // Timer 0 Priority
 353          SI_SBIT(PX0, SFR_IP, 0);                 // External Interrupt 0 Priority
 354          
 355          // SMB0CN 0xC0
 356          SI_SBIT(BUSY, SFR_SMB0CN, 7);            // SMBus0 Busy
 357          SI_SBIT(ENSMB, SFR_SMB0CN, 6);           // SMBus0 Enable
 358          SI_SBIT(STA, SFR_SMB0CN, 5);             // SMBus0 Start Flag
 359          SI_SBIT(STO, SFR_SMB0CN, 4);             // SMBus0 Stop Flag
 360          SI_SBIT(SI, SFR_SMB0CN, 3);              // SMBus0 Interrupt pending
 361          SI_SBIT(AA, SFR_SMB0CN, 2);              // SMBus0 Assert/Ack Flag
 362          SI_SBIT(SMBFTE, SFR_SMB0CN, 1);          // SMBus0 Bus free timeout enable
 363          SI_SBIT(SMBTOE, SFR_SMB0CN, 0);          // SMBus0 SCL low timeout enable
 364          
 365          // TMR2CN 0xC8
C51 COMPILER V8.12   C8051F120_DEFS                                                        11/17/2023 08:28:32 PAGE 7   

 366          SI_SBIT(TF2, SFR_TMR2CN, 7);             // Timer2 Overflow
 367          SI_SBIT(EXF2, SFR_TMR2CN, 6);            // Timer2 External
 368                                                 // Bit 5 unused
 369                                                 // Bit 4 unused
 370          SI_SBIT(EXEN2, SFR_TMR2CN, 3);           // Timer2 External Enable
 371          SI_SBIT(TR2, SFR_TMR2CN, 2);             // Timer2 Run Enable
 372          SI_SBIT(CT2, SFR_TMR2CN, 1);             // Timer2 Counter select
 373          SI_SBIT(CPRL2, SFR_TMR2CN, 0);           // Timer2 Capture select
 374          
 375          // TMR3CN 0xC8
 376          SI_SBIT(TF3, SFR_TMR3CN, 7);             // Timer3 Overflow
 377          SI_SBIT(EXF3, SFR_TMR3CN, 6);            // Timer3 External
 378                                                 // Bit 5 unused
 379                                                 // Bit 4 unused
 380          SI_SBIT(EXEN3, SFR_TMR3CN, 3);           // Timer3 External Enable
 381          SI_SBIT(TR3, SFR_TMR3CN, 2);             // Timer3 Run Enable
 382          SI_SBIT(CT3, SFR_TMR3CN, 1);             // Timer3 Counter select
 383          SI_SBIT(CPRL3, SFR_TMR3CN, 0);           // Timer3 Capture select
 384          
 385          // TMR4CN 0xC8
 386          SI_SBIT(TF4, SFR_TMR4CN, 7);             // Timer4 Overflow
 387          SI_SBIT(EXF4, SFR_TMR4CN, 6);            // Timer4 External
 388                                                 // Bit 5 unused
 389                                                 // Bit 4 unused
 390          SI_SBIT(EXEN4, SFR_TMR4CN, 3);           // Timer4 External Enable
 391          SI_SBIT(TR4, SFR_TMR4CN, 2);             // Timer4 Run Enable
 392          SI_SBIT(CT4, SFR_TMR4CN, 1);             // Timer4 Counter select
 393          SI_SBIT(CPRL4, SFR_TMR4CN, 0);           // Timer4 Capture select
 394          
 395          // PSW 0xD0
 396          SI_SBIT(CY, SFR_PSW, 7);                 // Carry Flag
 397          SI_SBIT(AC, SFR_PSW, 6);                 // Auxiliary Carry Flag
 398          SI_SBIT(F0, SFR_PSW, 5);                 // User Flag 0
 399          SI_SBIT(RS1, SFR_PSW, 4);                // Register Bank Select 1
 400          SI_SBIT(RS0, SFR_PSW, 3);                // Register Bank Select 0
 401          SI_SBIT(OV, SFR_PSW, 2);                 // Overflow Flag
 402          SI_SBIT(F1, SFR_PSW, 1);                 // User Flag 1
 403          SI_SBIT(P, SFR_PSW, 0);                  // Accumulator Parity Flag
 404          
 405          // PCA0CN 0xD8
 406          SI_SBIT(CF, SFR_PCA0CN, 7);              // PCA0 Counter Overflow Flag
 407          SI_SBIT(CR, SFR_PCA0CN, 6);              // PCA0 Counter Run Control Bit
 408          SI_SBIT(CCF5, SFR_PCA0CN, 5);            // PCA0 Module 5 Interrupt Flag
 409          SI_SBIT(CCF4, SFR_PCA0CN, 4);            // PCA0 Module 4 Interrupt Flag
 410          SI_SBIT(CCF3, SFR_PCA0CN, 3);            // PCA0 Module 3 Interrupt Flag
 411          SI_SBIT(CCF2, SFR_PCA0CN, 2);            // PCA0 Module 2 Interrupt Flag
 412          SI_SBIT(CCF1, SFR_PCA0CN, 1);            // PCA0 Module 1 Interrupt Flag
 413          SI_SBIT(CCF0, SFR_PCA0CN, 0);            // PCA0 Module 0 Interrupt Flag
 414          
 415          // ADC0CN 0xE8
 416          SI_SBIT(AD0EN, SFR_ADC0CN, 7);           // ADC0 Enable
 417          SI_SBIT(AD0TM, SFR_ADC0CN, 6);           // ADC0 Track Mode
 418          SI_SBIT(AD0INT, SFR_ADC0CN, 5);          // ADC0 EOC Interrupt Flag
 419          SI_SBIT(AD0BUSY, SFR_ADC0CN, 4);         // ADC0 Busy Flag
 420          SI_SBIT(AD0CM1, SFR_ADC0CN, 3);          // ADC0 Convert Start Mode Bit 1
 421          SI_SBIT(AD0CM0, SFR_ADC0CN, 2);          // ADC0 Convert Start Mode Bit 0
 422          SI_SBIT(AD0WINT, SFR_ADC0CN, 1);         // ADC0 Window Interrupt Flag
 423          SI_SBIT(AD0LJST, SFR_ADC0CN, 0);         // ADC0 Left Justify
 424          
 425          // ADC2CN 0xE8
 426          SI_SBIT(AD2EN, SFR_ADC2CN, 7);           // ADC2 Enable
 427          SI_SBIT(AD2TM, SFR_ADC2CN, 6);           // ADC2 Track Mode
C51 COMPILER V8.12   C8051F120_DEFS                                                        11/17/2023 08:28:32 PAGE 8   

 428          SI_SBIT(AD2INT, SFR_ADC2CN, 5);          // ADC2 EOC Interrupt Flag
 429          SI_SBIT(AD2BUSY, SFR_ADC2CN, 4);         // ADC2 Busy Flag
 430          SI_SBIT(AD2CM2, SFR_ADC2CN, 3);          // ADC2 Convert Start Mode Bit 2
 431          SI_SBIT(AD2CM1, SFR_ADC2CN, 2);          // ADC2 Convert Start Mode Bit 1
 432          SI_SBIT(AD2CM0, SFR_ADC2CN, 1);          // ADC2 Convert Start Mode Bit 0
 433          SI_SBIT(AD2WINT, SFR_ADC2CN, 0);         // ADC2 Window Interrupt Flag
 434          
 435          // SPI0CN 0xF8
 436          SI_SBIT(SPIF, SFR_SPI0CN, 7);            // SPI0 Interrupt Flag
 437          SI_SBIT(WCOL, SFR_SPI0CN, 6);            // SPI0 Write Collision Flag
 438          SI_SBIT(MODF, SFR_SPI0CN, 5);            // SPI0 Mode Fault Flag
 439          SI_SBIT(RXOVRN, SFR_SPI0CN, 4);          // SPI0 RX Overrun Flag
 440          SI_SBIT(NSSMD1, SFR_SPI0CN, 3);          // SPI0 Slave Select Mode 1
 441          SI_SBIT(NSSMD0, SFR_SPI0CN, 2);          // SPI0 Slave Select Mode 0
 442          SI_SBIT(TXBMT, SFR_SPI0CN, 1);           // SPI0 TX Buffer Empty Flag
 443          SI_SBIT(SPIEN, SFR_SPI0CN, 0);           // SPI0 Enable
 444          
 445          //-----------------------------------------------------------------------------
 446          // Interrupt Priorities
 447          //-----------------------------------------------------------------------------
 448          
 449          #define INTERRUPT_INT0             0   // External Interrupt 0
 450          #define INTERRUPT_TIMER0           1   // Timer0 Overflow
 451          #define INTERRUPT_INT1             2   // External Interrupt 1
 452          #define INTERRUPT_TIMER1           3   // Timer1 Overflow
 453          #define INTERRUPT_UART0            4   // UART0
 454          #define INTERRUPT_TIMER2           5   // Timer2 Overflow
 455          #define INTERRUPT_SPI0             6   // SPI0
 456          #define INTERRUPT_SMBUS0           7   // SMBus0 Interface
 457          #define INTERRUPT_ADC0_WINDOW      8   // ADC0 Window Comparison
 458          #define INTERRUPT_PCA0             9   // PCA0 Peripheral
 459          #define INTERRUPT_COMPARATOR0F     10  // Comparator0 Falling
 460          #define INTERRUPT_COMPARATOR0R     11  // Comparator0 Rising
 461          #define INTERRUPT_COMPARATOR1F     12  // Comparator1 Falling
 462          #define INTERRUPT_COMPARATOR1R     13  // Comparator1 Rising
 463          #define INTERRUPT_TIMER3           14  // Timer3 Overflow
 464          #define INTERRUPT_ADC0_EOC         15  // ADC0 End Of Conversion
 465          #define INTERRUPT_TIMER4           16  // Timer4 Overflow
 466          #define INTERRUPT_ADC2_WINDOW      17  // ADC2 Window Comparison
 467          #define INTERRUPT_ADC2_EOC         18  // ADC2 End Of Conversion
 468                                                 // 19 - RESERVED
 469          #define INTERRUPT_UART1            20  // UART1
 470          
 471          //-----------------------------------------------------------------------------
 472          // SFR Page Definitions
 473          //-----------------------------------------------------------------------------
 474          
 475          #define  CONFIG_PAGE       0x0F        // SYSTEM AND PORT CONFIGURATION PAGE
 476          #define  LEGACY_PAGE       0x00        // LEGACY SFR PAGE
 477          #define  TIMER01_PAGE      0x00        // TIMER0 AND TIMER1
 478          #define  CPT0_PAGE         0x01        // COMPARATOR0
 479          #define  CPT1_PAGE         0x02        // COMPARATOR1
 480          #define  UART0_PAGE        0x00        // UART0
 481          #define  UART1_PAGE        0x01        // UART1
 482          #define  SPI0_PAGE         0x00        // SPI0
 483          #define  EMI0_PAGE         0x00        // EMIF
 484          #define  ADC0_PAGE         0x00        // ADC0
 485          #define  ADC2_PAGE         0x02        // ADC2
 486          #define  MAC0_PAGE         0x03        // MAC
 487          #define  SMB0_PAGE         0x00        // SMBUS0
 488          #define  TMR2_PAGE         0x00        // TIMER2
 489          #define  TMR3_PAGE         0x01        // TIMER3
C51 COMPILER V8.12   C8051F120_DEFS                                                        11/17/2023 08:28:32 PAGE 9   

 490          #define  TMR4_PAGE         0x02        // TIMER4
 491          #define  DAC0_PAGE         0x00        // DAC0
 492          #define  DAC1_PAGE         0x01        // DAC1
 493          #define  PCA0_PAGE         0x00        // PCA0
 494          #define  REF0_PAGE         0x00        // VREF0
 495          #define  PLL0_PAGE         0x0F        // PLL0
 496          
 497          //-----------------------------------------------------------------------------
 498          // SDCC PDATA External Memory Paging Support
 499          //-----------------------------------------------------------------------------
 500          
 501          #if defined SDCC
              
              SI_SFR(_XPAGE, 0xA2); // Point to the EMI0CN register
              
              #endif
 506          
 507          //-----------------------------------------------------------------------------
 508          // Header File PreProcessor Directive
 509          //-----------------------------------------------------------------------------
 510          
 511          #endif                                 // #define C8051F120_DEFS_H
 512          
 513          //-----------------------------------------------------------------------------
 514          // End Of File
 515          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
